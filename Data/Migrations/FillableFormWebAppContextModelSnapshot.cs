// <auto-generated />
using System;
using FillableFormWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fillable_Form_App.Data.Migrations
{
    [DbContext(typeof(FillableFormWebAppContext))]
    partial class FillableFormWebAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.12");

            modelBuilder.Entity("FillableFormWebApp.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("department_id");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("department_name");

                    b.HasKey("DepartmentId");

                    b.HasIndex(new[] { "DepartmentName" }, "IX_Departments_department_name")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.DepartmentSupervisor", b =>
                {
                    b.Property<int>("DepartmentSupervisorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("departmentSupervisor_id");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("department_id");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("supervisor_id");

                    b.HasKey("DepartmentSupervisorId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("DepartmentSupervisors");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("employee_id");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("department_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("employee_name");

                    b.Property<int>("Ssn")
                        .HasColumnType("INT")
                        .HasColumnName("ssn");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex(new[] { "Ssn" }, "IX_Employees_ssn")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.Form", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("form_id");

                    b.Property<string>("AdditionalRemarks")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("addtionalRemarks");

                    b.Property<string>("Dates")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("dates");

                    b.Property<string>("Decision")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("decision");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("employee_id");

                    b.Property<DateTime>("FormDate")
                        .HasColumnType("datetime")
                        .HasColumnName("form_date");

                    b.Property<int>("FormTypeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("formType_id");

                    b.Property<string>("Justification")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("justitification");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("reason");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("status");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("supervisor_id");

                    b.Property<string>("TypeOfLeave")
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("typeOfLeave");

                    b.HasKey("FormId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FormTypeId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.FormType", b =>
                {
                    b.Property<int>("FormTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("formType_id");

                    b.Property<string>("FormTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("formType_name");

                    b.HasKey("FormTypeId");

                    b.HasIndex(new[] { "FormTypeName" }, "IX_FormTypes_formType_name")
                        .IsUnique();

                    b.ToTable("FormTypes");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.Supervisor", b =>
                {
                    b.Property<int>("SupervisorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("supervisor_id");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("employee_id");

                    b.HasKey("SupervisorId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.DepartmentSupervisor", b =>
                {
                    b.HasOne("FillableFormWebApp.Models.Department", "Department")
                        .WithMany("DepartmentSupervisors")
                        .HasForeignKey("DepartmentId")
                        .IsRequired();

                    b.HasOne("FillableFormWebApp.Models.Supervisor", "Supervisor")
                        .WithMany("DepartmentSupervisors")
                        .HasForeignKey("SupervisorId")
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.Employee", b =>
                {
                    b.HasOne("FillableFormWebApp.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.Form", b =>
                {
                    b.HasOne("FillableFormWebApp.Models.Employee", "Employee")
                        .WithMany("Forms")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.HasOne("FillableFormWebApp.Models.FormType", "FormType")
                        .WithMany("Forms")
                        .HasForeignKey("FormTypeId")
                        .IsRequired();

                    b.HasOne("FillableFormWebApp.Models.Supervisor", "Supervisor")
                        .WithMany("Forms")
                        .HasForeignKey("SupervisorId")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("FormType");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.Supervisor", b =>
                {
                    b.HasOne("FillableFormWebApp.Models.Employee", "Employee")
                        .WithMany("Supervisors")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.Department", b =>
                {
                    b.Navigation("DepartmentSupervisors");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.Employee", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("Supervisors");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.FormType", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("FillableFormWebApp.Models.Supervisor", b =>
                {
                    b.Navigation("DepartmentSupervisors");

                    b.Navigation("Forms");
                });
#pragma warning restore 612, 618
        }
    }
}
